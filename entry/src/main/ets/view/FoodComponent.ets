import AddBtn from './Home/AddBtnComponent'
import router from '@ohos.router';
import FoodItem from '../bean/FoodItem';
import { getChineseCategories} from '../util/DataUtil';
import { FoodListComponent } from './Home/FoodListComponent';
import { SortMenuComponent } from './Home/sortType/SortMenuComponent';
@Styles function allSize() {
  .width('100%')
  .height('100%')
}

@Component
export struct CategoryModeFoods {
  @State currentTabIndex: number = 0
  @Link foodList: FoodItem[];
  foodCategories: string[] = getChineseCategories()

  @Builder
  tabBarItemBuilder(value: string, index: number) {
    Text(value)
      .fontColor(this.currentTabIndex === index ? 'rgba(0,0,0,0.9)' : 'rgba(0,0,0,0.6)')
      .fontSize(this.currentTabIndex === index ? 23 : 17)
      .margin({ top: 2 })
      .height(56)
      .width("98%")

  }

  build() {
    Tabs() {
      TabContent() {
        FoodListComponent({ foodList: $foodList})
      }.tabBar(this.tabBarItemBuilder("全部", 0))

      ForEach(this.foodCategories, (foodCategory: string, index?: number) => {
        TabContent() {
          FoodListComponent({ foodList: $foodList,foodCategory: foodCategory})
        }.tabBar(this.tabBarItemBuilder(foodCategory,
          index ! + 1))
      })
    }
    .animationDuration(0)
    .barWidth('100%')
    .onChange((index) => {
      this.currentTabIndex = index
    })
    .width('95%')

  }

}

@Component
export default struct FoodIndex {
  @Link foodList : FoodItem[]
  @State @Watch('onSortWayChange') selectByName: boolean = true

  @State searchInfo: string = '';
  private controller: SearchController = new SearchController()

  filter(value){
    // TODO: 搜索功能实现,即传 value给后端，得到新的 foodList
  }

  onSortWayChange(){
    // TODO: 排序方式一变，就要重新获取 foodList，根据 this.selectByName 的值可知道排序方式
    this.foodList.push(new FoodItem(4,"苹果","3天","10个","水果","冷藏1层"));
    this.foodList.push(new FoodItem(5,"白菜","3天","10个","蔬菜","冷藏1层"));
  }

  EditFoodWithPOST(){
    router.pushUrl(
      { url : 'pages/FoodDetailPage',
        params:{
          foodItem : new FoodItem(-1,'','','','',''),
          clickAction : 'POST'
        }
      }
    )
  }

  build(){
    Stack() {
      Column(){
        //顶部导航栏
        Row(){
          Text('食材小管家')
            .fontSize(29)
            .fontColor($r("app.color.titleColor"))
            .fontWeight(FontWeight.Bold)
            .padding({ top: 15, bottom: 10, left: 25, right: 20 })
            .alignSelf(ItemAlign.Start)
            .width('80%')

          // 其余方式: SelectExample()  popupSortType()
          SortMenuComponent({selectByName : $selectByName})

        }.backgroundColor('#ee9ca7')
        .height("8%")

          // Search栏
          Search({ value: this.searchInfo, placeholder: '请输入名称', controller: this.controller })
            .searchButton('搜索')
            .width('90%')
            .height("6%")
            .textFont({ size: 20, weight: FontWeight.Bold })
            .placeholderFont({ size: 18, weight: FontWeight.Normal, style: FontStyle.Normal })
            .backgroundColor('#FFEDF2F5')
            .placeholderColor(Color.Gray)
            .onSubmit((value: string) => {
              // 提交后反应
              this.searchInfo = value
              this.filter(value)
            })
            .onChange((value: string) => {
              this.searchInfo = value
            })

        // 食物列表
        CategoryModeFoods({foodList: $foodList})
      }
      // ”添加“按钮
      AddBtn({ clickAction: () => {this.EditFoodWithPOST()}})
    }
    .allSize()
    .linearGradient({
      angle: 90,
      colors: [['#ee9ca7', 0.0], ["#fbc7d4", 0.7]]
    })
  }
}